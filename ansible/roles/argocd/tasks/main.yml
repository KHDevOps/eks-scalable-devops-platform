---
- name: Ensure Kubernetes is running
  ansible.builtin.command: "kubectl --context {{ k8s_context }} cluster-info"
  register: k8s_info
  changed_when: false
  ignore_errors: true

- name: Start Minikube if not running and context is minikube
  ansible.builtin.command: minikube start
  when: 
    - k8s_info.rc != 0
    - k8s_context == 'minikube'

- name: Add Argo CD Helm repository
  kubernetes.core.helm_repository:
    name: argo
    repo_url: "{{ argocd_chart_repo }}"
    
- name: Create namespace for Argo CD
  kubernetes.core.k8s:
    name: "{{ argocd_namespace }}"
    kind: Namespace
    state: present
    kubeconfig: "{{ kubeconfig }}"
    context: "{{ k8s_context }}"
    
- name: Install Argo CD using Helm
  kubernetes.core.helm:
    name: "{{ argocd_release_name }}"
    chart_ref: "argo/{{ argocd_chart_name }}"
    chart_version: "{{ argocd_chart_version }}"
    release_namespace: "{{ argocd_namespace }}"
    create_namespace: false
    wait: true
    kubeconfig: "{{ kubeconfig }}"
    context: "{{ k8s_context }}"
    values:
      server:
        service:
          type: "{{ argocd_service_type }}"

- name: Wait for Argo CD server to be ready
  kubernetes.core.k8s_info:
    kind: Deployment
    name: "{{ argocd_release_name }}-server"
    namespace: "{{ argocd_namespace }}"
    kubeconfig: "{{ kubeconfig }}"
    context: "{{ k8s_context }}"
  register: argocd_deployment
  until: argocd_deployment.resources[0].status.availableReplicas is defined and argocd_deployment.resources[0].status.availableReplicas > 0
  retries: 30
  delay: 10

- name: Get Argo CD initial admin password
  ansible.builtin.shell:
    cmd: "kubectl --context {{ k8s_context }} -n {{ argocd_namespace }} get secret argocd-initial-admin-secret -o jsonpath='{.data.password}' | base64 -d"
    warn: false
  register: argocd_password
  changed_when: false

- name: Display Argo CD initial admin password
  ansible.builtin.debug:
    msg: "Argo CD initial admin password: {{ argocd_password.stdout }}"

- name: Apply all Argo CD application files in ci-cd/argocd/applications/dev
  kubernetes.core.k8s:
    src: "{{ item }}"
    state: present
    kubeconfig: "{{ kubeconfig }}"
    context: "{{ k8s_context }}"
  with_fileglob:
    - "{{ playbook_dir }}/../../ci-cd/argocd/applications/dev/*.yaml"
  register: apply_result

- name: Display result of applying application files
  ansible.builtin.debug:
    msg: "{{ apply_result.stdout_lines }}"

- name: Display access information
  ansible.builtin.debug:
    msg: 
      - "Argo CD has been installed in namespace {{ argocd_namespace }}"
      - "To access Argo CD UI, run: kubectl port-forward svc/{{ argocd_release_name }}-server -n {{ argocd_namespace }} 8080:443"
      - "Then visit: https://localhost:8080"
      - "Login with username: admin and password shown above"