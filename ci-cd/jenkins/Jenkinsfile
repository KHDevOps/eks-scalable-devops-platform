pipeline {
    agent { label 'built-in' }

    parameters {
        credentials(
            name: 'GIT_CREDENTIALS',
            description: 'Choose your credentials Git',
            credentialType: 'com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl',
            defaultValue: '',
            required: true
        )
    }

    stages {

        stage('Checkout Config Repo') {
            steps {
                git branch: 'main',
                    credentialsId: params.GIT_CREDENTIALS,
                    url: "https://github.com/KHDevOps/eks-scalable-devops-platform"
            }
        }

        stage('Build') {
            steps {
                echo 'Building..'
            }
        }
        stage('Test') {
            steps {
                echo 'Testing..'
            }
        }
        stage('Deploy') {
            steps {
                script {
                    def config = readYaml file: 'templates/app-config.yaml'
                    def configRepo = config.git.config_repo
                    def defaultBranch = config.git.default_branch
                    
                    def app_name = config.app.name
                    def version = config.app.version
                    def docker_repo = docker.username

                    def fileContent = """
app:
  name: "${app_name}"

# Docker image
image:
  repository: "${docker_repo}/${app_name}"
  tag: "${version}"

# Deployment
replicas: 1

# Container
container:
  port: 8080

# Service
service:
  port: 80
        """
                    
                    withCredentials([usernamePassword(credentialsId: params.GIT_CREDENTIALS, passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {

                        sh('rm -rf deploy-temp')
                        sh('mkdir deploy-temp')
                        
                        dir('deploy-temp') {

                            sh('git init')
                            sh('git config user.email "jenkins@yourproject.com"')
                            sh('git config user.name "Jenkins Automation"')
                            

                            writeFile file: 'hello-world.txt', text: fileContent
                            
                            sh("git remote add origin https://\${GIT_USERNAME}:\${GIT_PASSWORD}@${configRepo}")
                            sh('git add hello-world.txt')
                            sh('git commit -m "Jenkins deployment"')
                            sh("git push -f origin HEAD:${defaultBranch}")
                        }
                        
                        sh('rm -rf deploy-temp')
                    }

                    echo "Hello World successfully deployed!"
                }
            }
        }
    }   
}