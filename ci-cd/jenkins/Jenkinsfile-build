pipeline {
    agent {
        kubernetes {
            yaml '''
                apiVersion: v1
                kind: Pod
                spec:
                  containers:
                  - name: docker
                    image: docker:dind
                    securityContext:
                      privileged: true
                    env:
                    - name: DOCKER_TLS_CERTDIR
                      value: ""
            '''
        }
    }

    parameters {
        credentials(
            name: 'DOCKER_CREDENTIALS',
            description: 'Choose your credentials docker',
            credentialType: 'com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl',
            defaultValue: '',
            required: true
        )

        credentials(
            name: 'GIT_CREDENTIALS',
            description: 'Choose your credentials git',
            credentialType: 'com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl',
            defaultValue: '',
            required: true
        )
    }

    stages {
        
        stage('Checkout Config Repo') {
            steps {
                git branch: 'main',
                    credentialsId: params.GIT_CREDENTIALS,
                    url: "https://github.com/KHDevOps/eks-scalable-devops-platform"
            }
        }
        stage('Deploy') {
            steps {
                script {

                    def config = readYaml file: 'templates/app-config.yaml'
                    def source_repo = config.git.source_repo
                    def defaultBranch = config.git.default_branch
                    def app_name = config.app.name
                    def version = config.app.version
                    def docker_username = config.docker.username

                    dir('source-code') {
                        git branch: 'main',
                        credentialsId: params.GIT_CREDENTIALS,
                        url: "https://${source_repo}"

                        container('docker') {
                            script {
                                image = docker.build("${docker_username}/${app_name}")
                                image.tag("${docker_username}/${app_name}:latest")
                                docker.withRegistry('', params.DOCKER_CREDENTIALS) {            
                                    image.push("${env.BUILD_NUMBER}")            
                                    image.push("latest")  
                                }
                            }
                        }

                    }
                }
            }
        }
    }   
}